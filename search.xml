<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>激活函数的选择</title>
      <link href="/2018/09/29/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0%E7%9A%84%E9%80%89%E6%8B%A9/"/>
      <url>/2018/09/29/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0%E7%9A%84%E9%80%89%E6%8B%A9/</url>
      
        <content type="html"><![CDATA[<p>##几种不同的激活函数g(x)：<br><img src="images/激活函数的选择/activation1.png" alt="1"></p><p>##激活函数的选择：<br><img src="images/激活函数的选择/activation2.jpg" alt="2"></p><p>##sigmoid函数和tanh函数比较：<br>隐藏层：tanh函数的表现要好于sigmoid函数，因为tanh取值范围为[−1,+1]，输出分布在0值的附近，均值为0，从隐藏层到输出层数据起到了归一化（均值为0）的效果。<br>输出层：对于二分类任务的输出取值为{0,1}，故一般会选择sigmoid函数。<br>然而sigmoid和tanh函数在当|z|很大的时候，梯度会很小，在依据梯度的算法中，更新在后期会变得很慢。在实际应用中，要使|z|尽可能的落在0值附近。<br>ReLU弥补了前两者的缺陷，当z&gt;0时，梯度始终为1，从而提高神经网络基于梯度算法的运算速度。然而当z&lt;0时，梯度一直为0，但是实际的运用中，该缺陷的影响不是很大。<br>Leaky ReLU保证在z&lt;0的时候，梯度仍然不为0。<br>在选择激活函数的时候，如果在不知道该选什么的时候就选择ReLU，当然也没有固定答案，要依据实际问题在交叉验证集合中进行验证分析。</p>]]></content>
      
      
      <categories>
          
          <category> 技术干货 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Localhexonotfound引起的问题</title>
      <link href="/2018/07/24/Localhexonotfound/"/>
      <url>/2018/07/24/Localhexonotfound/</url>
      
        <content type="html"><![CDATA[<h3 id="Local-hexo-not-found-以及-Error-4058"><a href="#Local-hexo-not-found-以及-Error-4058" class="headerlink" title="Local hexo not found 以及 Error -4058"></a>Local hexo not found 以及 Error -4058</h3><p><em>之前想更换一个主题，但是因为git速度太慢失败了，其他的操作就没有了，然后就报了Local hexo not found ：</em></p><blockquote><p><em>ERROR Local hexo not found in G:test</em><br><em>ERROR Try running: ‘npm install hexo –save’</em></p></blockquote><p><em>之后执行 <code>npm install hexo --save</code> ,出现checkingPermissions Missing错误：</em></p><blockquote><p>npm WARN checkPermissions Missing write access to C:\Users\liuyg\AppData\Roaming\npm\node_modules\vue-cli\node_modules\cliui\node_modules\wordwrap<br>npm ERR! path C:\Users\liuyg\AppData\Roaming\npm\node_modules\vue-cli\node_modules\cliui\node_modules\wordwrap</p></blockquote><p><em>解决：</em></p><blockquote><p><em>删除博客目录下的node_modules,再执行 <code>cnpm(淘宝镜像)</code> 重新下载。</em><br><em>执行 <code>hexo g</code> 成功</em></p></blockquote><h3 id="hexo-s-无法运行以及访问localhost-4000无法得到页面"><a href="#hexo-s-无法运行以及访问localhost-4000无法得到页面" class="headerlink" title="hexo s 无法运行以及访问localhost:4000无法得到页面"></a>hexo s 无法运行以及访问localhost:4000无法得到页面</h3><p><em>解决：</em></p><blockquote><p>1.因为在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下： <code>cnpm install hexo-server --save</code> 安装此server后再试,hexo s问题解决。<br>2.可能是由于部分包没有下载完，执行 <code>cnpm install</code> ,再次访问得到页面。</p></blockquote><p><em>舒服。</em></p>]]></content>
      
      
      <categories>
          
          <category> problem </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何建立自己的知识体系</title>
      <link href="/2018/07/23/%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
      <url>/2018/07/23/%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="一、如何做笔记"><a href="#一、如何做笔记" class="headerlink" title="一、如何做笔记"></a><em>一、如何做笔记</em></h3><p><em>能把书中的框架和重点都展现出来或者你用一页纸能把重点说清楚，就算合格。</em></p><blockquote><ol><li>说理清结构，归纳重点。 </li><li>舍弃对自己无用的部分， </li><li>按自己的理解进行整理,有时会把导图按照7W3H的方式从新做一个思维导图 </li><li>用自己的话从新表达出来， </li><li>是实践，然后根据结果进行调整和改进。不断重复这几步 </li></ol></blockquote><h3 id="二、建立初步框架"><a href="#二、建立初步框架" class="headerlink" title="二、建立初步框架"></a><em>二、建立初步框架</em></h3><blockquote><ol><li>读过的书，尽可能做成笔记或导图，笔记放在OneNote里。导图放在MindManage里 </li><li>针对不同的主题，建立思维导图，尽量提练重点，然后在Note或分支中加下注释或出处。 </li><li>定期整理和汇总，不段调整分支和整体结构。 </li><li>如果有时间的话，最好做成PPT或写文章，能把所关注的问题，用自己的话给清楚表达出来 </li><li>不断重复这个过程。</li></ol></blockquote><h3 id="三、资料补充"><a href="#三、资料补充" class="headerlink" title="三、资料补充"></a><em>三、资料补充</em></h3><blockquote><p>如果学习的东西是一个专业性比较强的行业 </p><ol><li>还需要建立自己的专业名词字典 </li><li>做资料收集工作，定期整理 </li><li>针对特定大量阅读本专业的期刊杂志和相关资料，提练重点 </li><li>会记录所有自己学到的东西和心得 </li><li>把遇到的问题和处理办法单独记录，定期总结和分析 </li></ol></blockquote><h3 id="四、其他"><a href="#四、其他" class="headerlink" title="四、其他"></a><em>四、其他</em></h3><blockquote><p>当你完全按照这种方式，针对某方面积累几个月或一、二年，基本上可以冒充一下专家，而且业内人很难挑出毛病。<br>上面所的说东西比较宏观，还有很多东西没有说到。比如目标的制定，建立或加入圈子，合作性学习、更有效的实践、辅助技能的锻炼、资料搜索、分类、重复阅读、阅读技巧、有效的记录和表达。<br>实际上对于建立一个知识体系最快最有效的办法，高端访谈和顶级专家的培训，但这二点对于普通人来说基本上无法实现。不过可以折中一下，多请一些业内的专家吃饭，海聊，效果也很不错。</p></blockquote><p><em>当你自己已经建立一个成体系的框架，总结出不同方法的优缺点，你可以根据自己的情况进行调整。你再接触同类的资料，可以快速忽略雷同的部分，直接关注问题的核心，这时可以节省大量的时间。对于学习方法和时间管理这类通用技能，越早建立一个系统越好，给自己带来的回报越大。当积累到一定程度会从量变产生质变。</em></p><blockquote><p>原博文：<a href="http://www.read.org.cn/html/1336-build-your-own-knowledge-system.html" target="_blank" rel="noopener">http://www.read.org.cn/html/1336-build-your-own-knowledge-system.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> copy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习能力 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo搭建博客</title>
      <link href="/2018/07/23/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2018/07/23/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="hexo精简搭建流程及问题（windows）"><a href="#hexo精简搭建流程及问题（windows）" class="headerlink" title=" hexo精简搭建流程及问题（windows） "></a><em> hexo精简搭建流程及问题（windows） </em></h3><blockquote><p> <em>1—安裝</em></p></blockquote><ul><li>首先电脑上需要保证有Node.js以及Git</li><li>执行npm install -g hexo (-g参数代表的是全局安裝)</li><li>如果安装太慢试试淘宝镜像<em>cnpm</em>:npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></li></ul><blockquote><p><em>2—初始化以及配置</em></p></blockquote><ul><li><p>安装成功后，选择好合适的保存博客内容的文件夹,执行 <code>hexo init</code>便会安装相关依赖完成初始化, <em>一定要在git里面执行</em>,在DOS里执行不会成功创建相应文件夹，之前被坑惨。。。</p></li><li><p>之后进入 <code>_config.yml</code> 进行配置,其他相应属性都没什么，网上搜索即可知道对应的作用，主要是最后的部署配置项:</p></li></ul><blockquote><p>deploy:<br>type: github<br>repository: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Yourname/Yourname.git.io.git<br>branch: master</p></blockquote><p> 这里有三个坑：</p><ol><li>在每个属性后面都要空一格</li><li>因为github配置了ssh密匙,所以我的repository用的ssh地址的方式。之前https的方式一直报错，越改越错…可能是git的功力不够深厚</li><li>在github创建repository时,取名方式为： <em>Yourname.github.io</em>,名字不按规则会导致部署Git page时目录错误，比如之前我的仓库名是Yourname.git.io,部署完成后博客路径为<a href="https://Yourname.github.io/Yourname.git.io" target="_blank" rel="noopener">https://Yourname.github.io/Yourname.git.io</a>, 样式全部丢失(???)。</li></ol><blockquote><p><em>3—部署</em></p></blockquote><ol><li>执行 <code>hexo g</code> 生成页面, <code>hexo s</code>在localhost：4000查看效果, <code>hexo d</code>执行部署</li><li>在github中进入博客的repository的Settings,找到GitHub Pages,选择master,然后save,大约一分钟博客成功部署。但是一般来说 <code>hexo d</code> 后就自动设定好了,第二步可作为检索差错的一个方法。</li></ol>]]></content>
      
      
      <categories>
          
          <category> problem </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Laravel开发中问题</title>
      <link href="/2017/10/07/Laravel%E5%BC%80%E5%8F%91%E4%B8%AD%E9%97%AE%E9%A2%98/"/>
      <url>/2017/10/07/Laravel%E5%BC%80%E5%8F%91%E4%B8%AD%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>(持续更新)</p><ol><li><p><strong>Use of undefined constant users - assumed ‘users’</strong><br>解决：<br>模型中表名未加单引号。<br>protected $table = ‘users’;</p></li><li><p><strong>SQLSTATE[HY000]: General error: 1364 Field ‘password’ doesn’t have a default value</strong><br>解决： protected $fillable = [<br>   ‘name’,’email’,’password,’<br> ];   (可填入字段错误的写入逗号)</p></li><li><p><strong>Type error: Argument 1 passed to Illuminate\Auth\EloquentUserProvider::validateCredentials() must be an instance of Illuminate\Contracts\Auth\Authenticatable, instance of App\Models\User given, called in /home/vagrant/Code/weibo2/vendor/laravel/framework/src/Illuminate/Auth/SessionGuard.php on line 381</strong><br>解决：<br>新创建的User类继承Model继承错误，应该继承Authenticatable，按照原本框架自带User更改即可，新建模型时需注意。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
