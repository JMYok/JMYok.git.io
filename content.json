{"meta":{"title":"BobJiang","subtitle":"实践即真理","description":null,"author":"BobJiang","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"激活函数的选择","slug":"激活函数的选择","date":"2018-09-29T07:17:19.000Z","updated":"2018-09-29T07:25:22.787Z","comments":true,"path":"2018/09/29/激活函数的选择/","link":"","permalink":"http://yoursite.com/2018/09/29/激活函数的选择/","excerpt":"","text":"几种不同的激活函数g(x)： 激活函数的选择：sigmoid函数和tanh函数比较：隐藏层：tanh函数的表现要好于sigmoid函数，因为tanh取值范围为[−1,+1]，输出分布在0值的附近，均值为0，从隐藏层到输出层数据起到了归一化（均值为0）的效果。输出层：对于二分类任务的输出取值为{0,1}，故一般会选择sigmoid函数。然而sigmoid和tanh函数在当|z|很大的时候，梯度会很小，在依据梯度的算法中，更新在后期会变得很慢。在实际应用中，要使|z|尽可能的落在0值附近。ReLU弥补了前两者的缺陷，当z&gt;0时，梯度始终为1，从而提高神经网络基于梯度算法的运算速度。然而当z&lt;0时，梯度一直为0，但是实际的运用中，该缺陷的影响不是很大。Leaky ReLU保证在z&lt;0的时候，梯度仍然不为0。在选择激活函数的时候，如果在不知道该选什么的时候就选择ReLU，当然也没有固定答案，要依据实际问题在交叉验证集合中进行验证分析。","categories":[],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"}]},{"title":"Localhexonotfound引起的问题","slug":"Localhexonotfound","date":"2018-07-24T13:59:18.000Z","updated":"2018-07-24T14:48:23.477Z","comments":true,"path":"2018/07/24/Localhexonotfound/","link":"","permalink":"http://yoursite.com/2018/07/24/Localhexonotfound/","excerpt":"","text":"Local hexo not found 以及 Error -4058之前想更换一个主题，但是因为git速度太慢失败了，其他的操作就没有了，然后就报了Local hexo not found ： ERROR Local hexo not found in G:testERROR Try running: ‘npm install hexo –save’ 之后执行 npm install hexo --save ,出现checkingPermissions Missing错误： npm WARN checkPermissions Missing write access to C:\\Users\\liuyg\\AppData\\Roaming\\npm\\node_modules\\vue-cli\\node_modules\\cliui\\node_modules\\wordwrapnpm ERR! path C:\\Users\\liuyg\\AppData\\Roaming\\npm\\node_modules\\vue-cli\\node_modules\\cliui\\node_modules\\wordwrap 解决： 删除博客目录下的node_modules,再执行 cnpm(淘宝镜像) 重新下载。执行 hexo g 成功 hexo s 无法运行以及访问localhost:4000无法得到页面解决： 1.因为在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下： cnpm install hexo-server --save 安装此server后再试,hexo s问题解决。2.可能是由于部分包没有下载完，执行 cnpm install ,再次访问得到页面。 舒服。","categories":[{"name":"problem","slug":"problem","permalink":"http://yoursite.com/categories/problem/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"如何建立自己的知识体系","slug":"如何建立自己的知识体系","date":"2018-07-23T15:24:27.000Z","updated":"2018-07-23T15:38:25.006Z","comments":true,"path":"2018/07/23/如何建立自己的知识体系/","link":"","permalink":"http://yoursite.com/2018/07/23/如何建立自己的知识体系/","excerpt":"","text":"一、如何做笔记能把书中的框架和重点都展现出来或者你用一页纸能把重点说清楚，就算合格。 说理清结构，归纳重点。 舍弃对自己无用的部分， 按自己的理解进行整理,有时会把导图按照7W3H的方式从新做一个思维导图 用自己的话从新表达出来， 是实践，然后根据结果进行调整和改进。不断重复这几步 二、建立初步框架 读过的书，尽可能做成笔记或导图，笔记放在OneNote里。导图放在MindManage里 针对不同的主题，建立思维导图，尽量提练重点，然后在Note或分支中加下注释或出处。 定期整理和汇总，不段调整分支和整体结构。 如果有时间的话，最好做成PPT或写文章，能把所关注的问题，用自己的话给清楚表达出来 不断重复这个过程。 三、资料补充 如果学习的东西是一个专业性比较强的行业 还需要建立自己的专业名词字典 做资料收集工作，定期整理 针对特定大量阅读本专业的期刊杂志和相关资料，提练重点 会记录所有自己学到的东西和心得 把遇到的问题和处理办法单独记录，定期总结和分析 四、其他 当你完全按照这种方式，针对某方面积累几个月或一、二年，基本上可以冒充一下专家，而且业内人很难挑出毛病。上面所的说东西比较宏观，还有很多东西没有说到。比如目标的制定，建立或加入圈子，合作性学习、更有效的实践、辅助技能的锻炼、资料搜索、分类、重复阅读、阅读技巧、有效的记录和表达。实际上对于建立一个知识体系最快最有效的办法，高端访谈和顶级专家的培训，但这二点对于普通人来说基本上无法实现。不过可以折中一下，多请一些业内的专家吃饭，海聊，效果也很不错。 当你自己已经建立一个成体系的框架，总结出不同方法的优缺点，你可以根据自己的情况进行调整。你再接触同类的资料，可以快速忽略雷同的部分，直接关注问题的核心，这时可以节省大量的时间。对于学习方法和时间管理这类通用技能，越早建立一个系统越好，给自己带来的回报越大。当积累到一定程度会从量变产生质变。 原博文：http://www.read.org.cn/html/1336-build-your-own-knowledge-system.html","categories":[{"name":"copy","slug":"copy","permalink":"http://yoursite.com/categories/copy/"}],"tags":[{"name":"学习能力","slug":"学习能力","permalink":"http://yoursite.com/tags/学习能力/"}]},{"title":"hexo搭建博客","slug":"hexo搭建博客","date":"2018-07-23T07:05:36.000Z","updated":"2018-07-23T15:35:30.602Z","comments":true,"path":"2018/07/23/hexo搭建博客/","link":"","permalink":"http://yoursite.com/2018/07/23/hexo搭建博客/","excerpt":"","text":"hexo精简搭建流程及问题（windows） 1—安裝 首先电脑上需要保证有Node.js以及Git 执行npm install -g hexo (-g参数代表的是全局安裝) 如果安装太慢试试淘宝镜像cnpm:npm install -g cnpm –registry=https://registry.npm.taobao.org 2—初始化以及配置 安装成功后，选择好合适的保存博客内容的文件夹,执行 hexo init便会安装相关依赖完成初始化, 一定要在git里面执行,在DOS里执行不会成功创建相应文件夹，之前被坑惨。。。 之后进入 _config.yml 进行配置,其他相应属性都没什么，网上搜索即可知道对应的作用，主要是最后的部署配置项: deploy:type: githubrepository: git@github.com:Yourname/Yourname.git.io.gitbranch: master 这里有三个坑： 在每个属性后面都要空一格 因为github配置了ssh密匙,所以我的repository用的ssh地址的方式。之前https的方式一直报错，越改越错…可能是git的功力不够深厚 在github创建repository时,取名方式为： Yourname.github.io,名字不按规则会导致部署Git page时目录错误，比如之前我的仓库名是Yourname.git.io,部署完成后博客路径为https://Yourname.github.io/Yourname.git.io, 样式全部丢失(???)。 3—部署 执行 hexo g 生成页面, hexo s在localhost：4000查看效果, hexo d执行部署 在github中进入博客的repository的Settings,找到GitHub Pages,选择master,然后save,大约一分钟博客成功部署。但是一般来说 hexo d 后就自动设定好了,第二步可作为检索差错的一个方法。","categories":[{"name":"problem","slug":"problem","permalink":"http://yoursite.com/categories/problem/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"Laravel开发中问题","slug":"Laravel开发中问题","date":"2017-10-06T20:14:33.000Z","updated":"2017-10-06T20:20:19.782Z","comments":true,"path":"2017/10/07/Laravel开发中问题/","link":"","permalink":"http://yoursite.com/2017/10/07/Laravel开发中问题/","excerpt":"","text":"(持续更新) Use of undefined constant users - assumed ‘users’解决：模型中表名未加单引号。protected $table = ‘users’; SQLSTATE[HY000]: General error: 1364 Field ‘password’ doesn’t have a default value解决： protected $fillable = [ ‘name’,’email’,’password,’ ]; (可填入字段错误的写入逗号) Type error: Argument 1 passed to Illuminate\\Auth\\EloquentUserProvider::validateCredentials() must be an instance of Illuminate\\Contracts\\Auth\\Authenticatable, instance of App\\Models\\User given, called in /home/vagrant/Code/weibo2/vendor/laravel/framework/src/Illuminate/Auth/SessionGuard.php on line 381解决：新创建的User类继承Model继承错误，应该继承Authenticatable，按照原本框架自带User更改即可，新建模型时需注意。","categories":[],"tags":[{"name":"Laravel","slug":"Laravel","permalink":"http://yoursite.com/tags/Laravel/"}]}]}